Установка в докере PostgreSQL:
------------------------------

docker run -d --hostname tgbotmiddle --name tgbotmiddle -p 5433:5432 -e POSTGRES_USER=userok -e POSTGRES_PASSWORD=p@ssw0rd -e POSTGRES_DB=tgbotmiddle -v /data:/var/lib/postgresql/data --restart=unless-stopped postgres:14.5

-d                                 // выполнить в консоли detached после запуска контейнера
--hostname tgbotmiddle             // имя хоста для подключения к контейнеру из вне
--name tgbotmiddle                 // имя контейнера
-p 5433:5432                       // мост для проброса портов внешний порт 5433, внутри контейнера порт Postrge стандартный 5432
-e POSTGRES_USER=userok -e POSTGRES_PASSWORD=p@ssw0rd      // задание переменных окружения внутри контейнера пользователя и пароля для соединения с сервером
-e POSTGRES_DB=tgbotmiddle                                 // название дефолтной базы данных
-v /data:/var/lib/postgresql/data                          // подключение внешнего тома к контейнеру для того, чтобы хранить (не потерять) в нём данные баз данных когда контейнер отключен
                                                           // /data - путь данных внутри контейнера
                                                           // /var/lib/postgresql/data - путь хранения данных на локальной машине
--restart=unless-stopped          // автозапуск контейнера при старте докера
postgres:14.5                     // имя образа в репозитории и через : версия образа


Если нужно, то для IDE можно скачать драйвер JBDC
-------------------------------------------------
https://jdbc.postgresql.org/download/
видеоинструкция:
https://www.youtube.com/watch?v=-MDPYDi01dM


Можно скачать через maven:
--------------------------
<dependency>
    <groupId>org.postgresql</groupId>
    <artifactId>postgresql</artifactId>
    <version>42.7.0</version>
</dependency>

Скачать PgAdmin:
----------------
https://www.pgadmin.org/download/




Установка PostgreSQL без докера под Linux:
------------------------------------------
sudo apt update
sudo apt upgrade
sudo apt install postgresql postgresql-contrib

проверить активность сервиса
service postgresql status

перезапустить сервис
sudo service postgresql restart

зайти внутрь
sudo -i -u postgres
psql

посмотреть инструкцию к man psql

сменить пароль для пользователя postgres:
ALTER USER postgres WITH PASSWORD 'mypassword';

включить наследование от родительских ролей
ALTER USER postgres LOGIN INHERIT;

Создать роль my_users, включить наследование от суперпользователя postgres с опцией админа
CREATE ROLE my_users;
GRANT my_users TO postgres WITH ADMIN OPTION;
ALTER ROLE my_users INHERIT;

создать пользователя myusername c паролем mypassword:
CREATE USER myusername WITH PASSWORD 'mypassword';

назначить пользователю права суперюзера:
ALTER USER myusername WITH SUPERUSER;

удалить пользователя:
DROP USER myusername;

\q - выход из консоли
\l - список баз данных
\du - вывести список пользователей

exit - выйти из сервиса postgres
psql - войти в postgres

------------------------------
Импорт из файла
------------------------------
создать БД (зайдя psql)
create database local_my_db;

выйти: \q

под пользователем postgres сделать импорт базы данных из файла dump_database.sql в базу данных local_my_db
psql -U postgres -d local_my_db -f /tmp/dump_database.sql

------------------------------
Установка PGMyAdmin под Linux:
------------------------------
curl -fsS https://www.pgadmin.org/static/packages_pgadmin_org.pub | sudo gpg --dearmor -o /usr/share/keyrings/packages-pgadmin-org.gpg

sudo sh -c 'echo "deb [signed-by=/usr/share/keyrings/packages-pgadmin-org.gpg] https://ftp.postgresql.org/pub/pgadmin/pgadmin4/apt/$(lsb_release -cs) pgadmin4 main" > /etc/apt/sources.list.d/pgadmin4.list && apt update'

sudo apt install pgadmin4


-------------------------------------------
Вывести все таблицы и занимаемое ими место:
-------------------------------------------
SELECT
    table_name,
    pg_size_pretty(table_size) AS table_size,
    pg_size_pretty(indexes_size) AS indexes_size,
    pg_size_pretty(total_size) AS total_size
FROM (
    SELECT
        table_name,
        pg_table_size(table_name) AS table_size,
        pg_indexes_size(table_name) AS indexes_size,
        pg_total_relation_size(table_name) AS total_size
    FROM (
        SELECT ('"' || table_schema || '"."' || table_name || '"') AS table_name
        FROM information_schema.tables
    ) AS all_tables
    ORDER BY total_size DESC
) AS pretty_sizes;
-------------------------------------------


-------------------------------------------
Вывести все активные запросы
-------------------------------------------
SELECT
    pid,
    datname,
    usename,
    application_name,
    client_addr,
    pg_catalog.to_char(backend_start, 'YYYY-MM-DD HH24:MI:SS TZ') AS backend_start,
    state,
    wait_event_type || ': ' || wait_event AS wait_event,
    array_to_string(pg_catalog.pg_blocking_pids(pid), ', ') AS blocking_pids,
    query,
    pg_catalog.to_char(state_change, 'YYYY-MM-DD HH24:MI:SS TZ') AS state_change,
    pg_catalog.to_char(query_start, 'YYYY-MM-DD HH24:MI:SS TZ') AS query_start,
    pg_catalog.to_char(xact_start, 'YYYY-MM-DD HH24:MI:SS TZ') AS xact_start,
    backend_type,
    CASE WHEN state = 'active' THEN ROUND((extract(epoch from now() - query_start) / 60)::numeric, 2) ELSE 0 END AS active_since
FROM
    pg_catalog.pg_stat_activity
WHERE usename='mescontests'
	AND state='active'
ORDER BY pid;
-------------------------------------------
